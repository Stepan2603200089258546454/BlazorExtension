@page "/Error"
@using System.Diagnostics
@using Microsoft.AspNetCore

<PageTitle>Ошибка</PageTitle>

<h1 class="text-danger">Ошибка.</h1>
<h2 class="text-danger">При обработке вашего запроса произошла ошибка.</h2>

@if (ShowRequestId)
{
    <p>
        <strong>Идентификатор запроса:</strong> <code>@RequestId</code>
    </p>
}

<h3>Режим разработки</h3>
<p>
    Переключение в среду <strong>Development</strong> отобразит более подробную информацию о произошедшей ошибке.
</p>
<p>
    <strong>
        Среду разработки не следует включать для развёрнутых приложений.
    </strong> 
    Это может привести к отображению конфиденциальной информации из исключений для конечных пользователей.

    Для локальной отладки включите среду разработки, установив переменную среды <strong>ASPNETCORE_ENVIRONMENT</strong> 
    на значение <strong>Development</strong>, и перезапустите приложение.
</p>

<div class="jumbotron">
    <h2>Ой-ой-ой, что-то пошло совсем плохо! :(</h2>
    <p class="lead text-left">
        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <strong>@ErrorMessage</strong>
        }

        @if (!string.IsNullOrEmpty(ErrorDescription))
        {
            <small>@ErrorDescription</small>
        }
    </p>
</div>

@code{
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);
    private string? ErrorMessage { get; set; }
    private string? ErrorDescription { get; set; }

    protected override void OnInitialized()
    {
        // Если ошибка возникла на сервере OpenIddict, отобразить сведения об ошибке.
        var response = HttpContext.GetOpenIddictServerResponse();
        if (response is not null)
        {
            ErrorMessage = response.Error;
            ErrorDescription = response.ErrorDescription;
        }
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
    }
}
