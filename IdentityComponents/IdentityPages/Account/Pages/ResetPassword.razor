@page "/Account/ResetPassword"

@inject IUserManager UserManager

<PageTitle>Сбросить пароль</PageTitle>

<h1>Сбросить пароль</h1>
<h2>Сбросьте свой пароль.</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <StatusMessage Message="@UserManager.Message" />

        <EditForm Model="Input" FormName="reset-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <input type="hidden" name="Input.Code" value="@Input.Code" />
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email" id="Input.Email" class="form-control" autocomplete="username"
                           aria-required="true" placeholder="name@example.com" />
                <label for="Input.Email" class="form-label">Электронная почта</label>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="Input.Password" id="Input.Password" class="form-control"
                           autocomplete="new-password" aria-required="true" placeholder="Пожалуйста, введите ваш пароль." />
                <label for="Input.Password" class="form-label">Пароль</label>
                <ValidationMessage For="() => Input.Password" class="text-danger" />
            </div>
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="Input.ConfirmPassword" id="Input.ConfirmPassword" class="form-control"
                           autocomplete="new-password" aria-required="true" placeholder="Пожалуйста, подтвердите свой пароль." />
                <label for="Input.ConfirmPassword" class="form-label">Подтвердите пароль</label>
                <ValidationMessage For="() => Input.ConfirmPassword" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Сбросить</button>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private ResetPasswordInputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? Code { get; set; }

    protected override void OnInitialized()
    {
        UserManager.OnResetPasswordInitialized(Input, Code);
    }

    private async Task OnValidSubmitAsync()
    {
        await UserManager.OnResetPasswordValidSubmitAsync(Input);
    }
}
