@attribute [Route(Const.IdentityRoute.Account.ResendEmailConfirmation)]

@inject IUserManager UserManager

<PageTitle>Повторно отправить подтверждение по электронной почте</PageTitle>

<h1>Повторно отправить подтверждение по электронной почте</h1>
<h2>Введите свой адрес электронной почты.</h2>
<hr />
<StatusMessage Message="@UserManager.Message" />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email" id="Input.Email" class="form-control" aria-required="true" placeholder="name@example.com" />
                <label for="Input.Email" class="form-label">Электронная почта</label>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Отправить повторно</button>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private EmailInputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        await UserManager.OnResendEmailConfirmationValidSubmitAsync(Input);
    }
}
