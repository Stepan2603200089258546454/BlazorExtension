@page "/Account/Manage/Email"

@inject IAccountManager AccountManager

<PageTitle>Управление электронной почтой</PageTitle>

<h3>Управление электронной почтой</h3>

<StatusMessage Message="@AccountManager.Message" />

<div class="row">
    <div class="col-xl-6">
        <form @onsubmit="OnSendEmailVerificationAsync" @formname="send-verification" id="send-verification-form" method="post">
            <AntiforgeryToken />
        </form>

        <EditForm Model="Input" FormName="change-email" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            
            @if (isEmailConfirmed)
            {
                <div class="form-floating mb-3 input-group">
                    <input type="text" value="@email" id="email" class="form-control" placeholder="Введите адрес электронной почты" disabled />
                    <div class="input-group-append">
                        <span class="h-100 input-group-text text-success font-weight-bold">✓</span>
                    </div>
                    <label for="email" class="form-label">Электронная почта</label>
                </div>
            }
            else
            {
                <div class="form-floating mb-3">
                    <input type="text" value="@email" id="email" class="form-control" placeholder="Введите адрес электронной почты" disabled />
                    <label for="email" class="form-label">Электронная почта</label>
                    <button type="submit" class="btn btn-link" form="send-verification-form">Отправить письмо с подтверждением</button>
                </div>
            }
            
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.NewEmail" id="Input.NewEmail" class="form-control"
                           autocomplete="email" aria-required="true" placeholder="Введите новый адрес электронной почты" />
                <label for="Input.NewEmail" class="form-label">Новое письмо</label>
                <ValidationMessage For="() => Input.NewEmail" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Изменить адрес электронной почты</button>
        </EditForm>
    </div>
</div>

@code {
    private string? message;
    private ApplicationUser user = default!;
    private string? email;
    private bool isEmailConfirmed;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm(FormName = "change-email")]
    private NewEmailInputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        (ApplicationUser user, string? email, bool isEmailConfirmed) initValue = await AccountManager.EmailOnInitializedAsync(HttpContext);
        user = initValue.user;
        email = initValue.email;
        isEmailConfirmed = initValue.isEmailConfirmed;

        Input.NewEmail ??= email;
    }

    private async Task OnValidSubmitAsync()
    {
        await AccountManager.EmailOnValidSubmitAsync(user, Input, email);
    }

    private async Task OnSendEmailVerificationAsync()
    {
        await AccountManager.EmailOnSendEmailVerificationAsync(user, email);
    }
}
