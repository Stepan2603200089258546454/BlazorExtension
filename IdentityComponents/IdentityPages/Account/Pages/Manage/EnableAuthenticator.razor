@attribute [Route(Const.IdentityRoute.AccountManage.EnableAuthenticator)]

@inject IAccountManager AccountManager

<PageTitle>Настроить приложение аутентификации</PageTitle>

@if (recoveryCodes is not null)
{
    <ShowRecoveryCodes RecoveryCodes="recoveryCodes.ToArray()" StatusMessage="@AccountManager.Message" />
}
else
{
    <StatusMessage Message="@AccountManager.Message" />

    <h3>Настроить приложение аутентификации</h3>
    
    <div>
        <p>Чтобы использовать приложение-аутентификатор, выполните следующие действия:</p>
        <ol class="list">
            <li>
                <p>
                    Загрузите приложение для двухфакторной аутентификации, например, Microsoft Authenticator для
                    <a href="https://go.microsoft.com/fwlink/?Linkid=825072">Android</a> и
                    <a href="https://go.microsoft.com/fwlink/?Linkid=825073">iOS</a> или
                    Google Authenticator для
                    <a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&amp;hl=ru">Android</a> и
                    <a href="https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8">iOS</a>.
                </p>
            </li>
            <li>
                <p>Отсканируйте QR-код или введите этот ключ <kbd>@sharedKey</kbd> в приложение двухфакторной аутентификации. Пробелы и регистр букв не имеют значения.</p>
                <div class="alert alert-info">Узнайте, как <a href="https://go.microsoft.com/fwlink/?Linkid=852423">включить генерацию QR-кода</a>.</div>
                <div></div>
                <div data-url="@authenticatorUri"></div>
            </li>
            <li>
                <p>
                    После сканирования QR-кода или ввода ключа выше приложение двухфакторной аутентификации предоставит вам
                    уникальный код. Введите код в поле подтверждения ниже.
                </p>
                <div class="row">
                    <div class="col-xl-6">
                        <EditForm Model="Input" FormName="send-code" OnValidSubmit="OnValidSubmitAsync" method="post">
                            <DataAnnotationsValidator />
                            <div class="form-floating mb-3">
                                <InputText @bind-Value="Input.Code" id="Input.Code" class="form-control"
                                           autocomplete="off" placeholder="Введите код" />
                                <label for="Input.Code" class="control-label form-label">Проверочный код</label>
                                <ValidationMessage For="() => Input.Code" class="text-danger" />
                            </div>
                            <button type="submit" class="btn btn-primary">Проверить</button>
                            <ValidationSummary class="text-danger" role="alert" />
                        </EditForm>
                    </div>
                </div>
            </li>
        </ol>
    </div>
}

@code {
    private ApplicationUser user = default!;
    private string? sharedKey;
    private string? authenticatorUri;
    private IEnumerable<string>? recoveryCodes;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private EnableAuthenticatorInputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        (ApplicationUser user, string sharedKey, string authenticatorUri) res = await AccountManager.EnableAuthenticatorOnInitializedAsync(HttpContext);
        user = res.user;
        sharedKey = res.sharedKey;
        authenticatorUri = res.authenticatorUri;
    }

    private async Task OnValidSubmitAsync()
    {
        recoveryCodes = await AccountManager.EnableAuthenticatorOnValidSubmitAsync(HttpContext, Input, user);
    }
}
