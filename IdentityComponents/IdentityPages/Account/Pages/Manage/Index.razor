@page "/Account/Manage"

@inject IAccountManager AccountManager

<PageTitle>Профиль</PageTitle>

<h3>Профиль</h3>

<StatusMessage />

<div class="row">
    <div class="col-xl-6">
        <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="form-floating mb-3">
                <input type="text" value="@username" id="username" class="form-control" placeholder="Выберите ваше имя пользователя." disabled />
                <label for="username" class="form-label">Имя пользователя</label>
            </div>
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.PhoneNumber" id="Input.PhoneNumber" class="form-control" placeholder="Введите свой номер телефона" />
                <label for="Input.PhoneNumber" class="form-label">Номер телефона</label>
                <ValidationMessage For="() => Input.PhoneNumber" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Сохранить</button>
        </EditForm>
    </div>
</div>

@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private ManageIndexInputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var res = await AccountManager.ManageIndexOnInitializedAsync(HttpContext);
        user = res.user;
        username = res.username;
        phoneNumber = res.phoneNumber;

        Input.PhoneNumber ??= phoneNumber;
    }

    private async Task OnValidSubmitAsync()
    {
        await AccountManager.ManageIndexOnValidSubmitAsync(HttpContext, Input, user, phoneNumber);
    }
}
