@attribute [Route(Const.IdentityRoute.AccountManage.TwoFactorAuthentication)]

@inject IAccountManager AccountManager

<PageTitle>Двухфакторная аутентификация (2FA)</PageTitle>

<StatusMessage />

<h3>Двухфакторная аутентификация (2FA)</h3>

@if (canTrack)
{
    if (is2faEnabled)
    {
        if (recoveryCodesLeft == 0)
        {
            <div class="alert alert-danger">
                <strong>У вас не осталось кодов восстановления.</strong>
                <p>
                    Прежде чем вы сможете войти в систему с помощью кода восстановления, вам необходимо
                    <a href="@Const.IdentityRoute.AccountManage.GenerateRecoveryCodes">сгенерировать новый набор кодов восстановления</a>
                    .
                </p>
            </div>
        }
        else if (recoveryCodesLeft == 1)
        {
            <div class="alert alert-danger">
                <strong>У вас остался 1 код восстановления.</strong>
                <p>
                    Вы можете
                    <a href="@Const.IdentityRoute.AccountManage.GenerateRecoveryCodes">сгенерировать новый набор кодов восстановления</a>
                    .
                </p>
            </div>
        }
        else if (recoveryCodesLeft <= 3)
        {
            <div class="alert alert-warning">
                <strong>У вас осталось @recoveryCodesLeft кодов восстановления.</strong>
                <p>
                    Вам следует
                    <a href="@Const.IdentityRoute.AccountManage.GenerateRecoveryCodes">сгенерировать новый набор кодов восстановления</a>
                    .
                </p>
            </div>
        }

        if (isMachineRemembered)
        {
            <form style="display: inline-block" @formname="forget-browser" @onsubmit="OnSubmitForgetBrowserAsync" method="post">
                <AntiforgeryToken />
                <button type="submit" class="btn btn-primary">Забудь этот браузер</button>
            </form>
        }

        <a href="@Const.IdentityRoute.AccountManage.Disable2fa" class="btn btn-primary">Отключить 2FA</a>
        <a href="@Const.IdentityRoute.AccountManage.GenerateRecoveryCodes" class="btn btn-primary">Сбросить коды восстановления</a>
    }

    <h4>Приложение-аутентификатор</h4>
    @if (!hasAuthenticator)
    {
        <a href="@Const.IdentityRoute.AccountManage.EnableAuthenticator" class="btn btn-primary">Добавить приложение для аутентификации</a>
    }
    else
    {
        <a href="@Const.IdentityRoute.AccountManage.EnableAuthenticator" class="btn btn-primary">Настройте приложение-аутентификатор</a>
        <a href="@Const.IdentityRoute.AccountManage.ResetAuthenticator" class="btn btn-primary">Сбросить приложение аутентификации</a>
    }
}
else
{
    <div class="alert alert-danger">
        <strong>Политика конфиденциальности и использования файлов cookie не принята.</strong>
        <p>Вы должны принять политику, прежде чем сможете включить двухфакторную аутентификацию.</p>
    </div>
}

@code {
    private bool canTrack;
    private bool hasAuthenticator;
    private int recoveryCodesLeft;
    private bool is2faEnabled;
    private bool isMachineRemembered;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var res = await AccountManager.TwoFactorAuthenticationOnInitializedAsync(HttpContext);
        canTrack = res.canTrack;
        hasAuthenticator = res.hasAuthenticator;
        is2faEnabled = res.is2faEnabled;
        isMachineRemembered = res.isMachineRemembered;
        recoveryCodesLeft = res.recoveryCodesLeft;
    }

    private async Task OnSubmitForgetBrowserAsync()
    {
        await AccountManager.TwoFactorAuthenticationOnSubmitForgetBrowserAsync(HttpContext);
    }
}
